---
layout: post
title:  "程序员如何做团队内部分享几点建议"
date:   2016-1-13 
categories: [Misc]

---

	How to make presentation?
	如何做演讲？这个课题对于开发来说好像一点关系也没有，可是我们确实无法避免，即使我们在外行看来，似乎是木呐呆滞的能一天20H坐那盯着电脑敲代码的猿，但是！！！我们还是得做内部分享的。
	废话就说这些，下面讲讲个人对于#内部分享#这样的小presentation的见解。

1. Keep the point 切题
如题。
举个例子，介绍一款优秀的开发工具，不讲这个工具如何便利，如何使用，却去深入讲解这个工具是如何实现的了，主次不分，要切题！要切题！要切题！
2. 时间控制，分配
把需要分享的内容条目化，即，列成几个点，一共又多少时间，然后每个点，孰轻孰重分配多少时间，这个一定要把握好。
这一点我是在高中的时候得到启发的：

	*来了一个新的实习老师，需要借班上同学一下，讲课，校长听课(大家应该都懂)*，结果这新老师讲的倒是可以接受，但时间把握有点呵呵，然后就没有然后了。
3. 抓主要矛盾
其实这一点和第一点是有些重复的，但是关注问题的粒度不一样，一个是subject方向，一个是 content,举个例子。

	*介绍一个设计模式，我们应该接受这个模式的定义，实质，场景，例子，或者demo，不能讲到一半，去深入一个实例里面的对象什么的了。  应该紧紧围绕这个subject讲解相关的content，不要拘泥于某个实例。*
4. 提问回答
既然是内部share，不管讲的怎样，这个互动的环节还是必不可少的，这样我们才能知道这次share是否达到我要的效果了，考虑个极端情况.

	*你讲的课题很厉害，然后讲解的很到位，深入简出，但是受众，听不懂。
 那也是失败的presentation。*
5. 收尾总结

	*好的老师，快下课的十分钟之内（有时候或许是十五分钟）一定会对讲的内容做一些总结，啊同学们，我们今天学习了%s%d%s,课后作业是%s%d%sBala bala...*
是吧，分享好了，稍微再念一下几个点，总结那么几句，我想那么效果又会更好一点了。
6. 拒绝大课题
这其实和第二点关于时间的把握相关了，如果你要讲的subject本来就是好几个小时讲解连它的提纲都讲不透彻的，为何要在内部分享那么轻量级的时间片上分享呢，讲也讲不透彻，还不如细细分开，循序渐进，整成一个系列的呢，是吧？
7. 如果做ppt的话，少用字，多用图，表，数据。不能满屏都是文字，那效果不好。
 
By ASHINE
2016/Jan/13

 



